{"version":3,"sources":["utils/utils.js","components/Header.component.jsx","pixijs/BackgroundAnimation.js","components/SpaceBackground.component.jsx","components/HeroSection.component.jsx","components/ProjectCard.component.jsx","components/ProjectsOverview.component.jsx","components/ProjectsSection.component.jsx","components/ContactSection.component.jsx","components/FooterSection.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["smoothScrollTo","id","element","document","getElementById","console","log","window","scroll","behavior","left","top","getBoundingClientRect","scrollY","Logo","className","Header","useState","navOpen","setNavOpen","onClick","warpSpeed","initStarBackground","canvas","app","PIXI","view","resizeTo","starTexture","from","renderer","width","cameraZ","fov","speed","getRandomColor","color","i","Math","floor","random","stars","star","sprite","z","x","y","anchor","tint","randomizeStar","stage","addChild","push","explosions","interactive","astroids","astroid","height","on","querySelector","style","cursor","screen","particle","lifetime","createExplosion","initial","deg","PI","distance","cos","sin","ticker","add","delta","dxCenter","dyCenter","distanceCenter","sqrt","distanceScale","max","scale","rotation","atan2","renderable","SpaceBackground","canvasRef","useRef","useEffect","current","ref","HeroSection","onMouseOut","onMouseOver","ProjectCard","project","tech","split","title","backgroundImage","image","map","techString","subtitle","githubLink","href","webLink","ProjectsOverview","projects","name","ProjectsSection","ContactSection","errorMessage","setErrorMessage","email","message","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","requestData","FormData","append","fetch","headers","method","mode","body","then","res","catch","error","type","FooterSection","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c63e30b2.chunk.js","sourcesContent":["\r\n\r\nexport const smoothScrollTo = (id) => {\r\n    const element = document.getElementById(id)\r\n    console.log(id)\r\n    console.log(element)\r\n    window.scroll({\r\n        behavior: \"smooth\",\r\n        left: 0,\r\n        top: element.getBoundingClientRect().top +  window.scrollY\r\n    })\r\n}\r\n\r\n","import React, {useState} from 'react'\r\nimport {smoothScrollTo} from \"../utils/utils\"\r\nimport \"../styles/components/header.styles.scss\";\r\nimport \"../styles/components/logo.styles.scss\";\r\n\r\nconst Header = () => {\r\n\r\n    const [navOpen, setNavOpen] = useState(false);\r\n    \r\n\r\n    const toggleNav = () => {\r\n        setNavOpen(!navOpen)\r\n    }\r\n\r\n    const onProjectsClick = () => { setNavOpen(false); smoothScrollTo(\"section-projects\");}\r\n    const onContactClick = () => { setNavOpen(false); smoothScrollTo(\"section-contact\");}\r\n    const onHomeClick = () => { setNavOpen(false); smoothScrollTo(\"section-hero\");}\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div>\r\n                <Logo />\r\n            </div>\r\n\r\n            <nav className={`header__nav ${navOpen ? \"header__nav--open\" : \"\"}`}>\r\n\r\n                <button className=\"header__menu-btn\" onClick={toggleNav}>\r\n\r\n                    <div className=\"header__btn-bars\">\r\n                    <div className=\"header__btn-bar header__btn-bar--1\"></div>\r\n                    <div className=\"header__btn-bar header__btn-bar--2\"></div>\r\n                    <div className=\"header__btn-bar header__btn-bar--3\"></div>\r\n                    </div>\r\n                </button>\r\n\r\n              \r\n\r\n\r\n                <ul className=\"header__nav-links\">\r\n                    <li className=\"header__nav-item\"><a onClick={onHomeClick}>Home</a></li>\r\n                    <li className=\"header__nav-item\"><a onClick={onProjectsClick}>Projects</a></li>\r\n                    <li className=\"header__nav-item\"><a onClick={onContactClick}>Contact Me</a></li>\r\n                </ul>\r\n            </nav>\r\n\r\n           \r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nconst Logo = () => (\r\n    <div className=\"logo\">\r\n        <span className=\"logo__first-letter\">E</span>\r\n        <span className=\"logo__second-letter\">S</span>\r\n    </div>\r\n)\r\n\r\nexport default Header;","import * as PIXI from \"pixi.js\"\r\n\r\n\r\nlet warpSpeed = .3;\r\n\r\nexport const speedUp = () => {\r\n    warpSpeed = 1;\r\n}\r\n\r\nexport const slowDown = () => {\r\n    warpSpeed = .3;\r\n}\r\n\r\n\r\nexport const initStarBackground = (canvas) => {\r\n\r\nconst app = new PIXI.Application({\r\n    view: canvas,\r\n    resizeTo: document.getElementById(\"section-hero\")\r\n});\r\n\r\n\r\n\r\n\r\n// Get the texture for rope.\r\nconst starTexture = PIXI.Texture.from('./star.png');\r\n\r\n\r\nconsole.log(app.renderer.width)\r\n\r\n//app.stage.hitArea = new PIXI.Rectangle(0, 0, app.renderer.width, app.renderer.height);\r\n\r\n\r\n\r\n\r\nconst starAmount = 200;\r\nconst asteroidAmount = 20;\r\nlet cameraZ = 0;\r\nconst fov = 10;\r\nconst baseSpeed = 0.01;\r\nlet speed = 0;\r\nconst starStretch = 10;\r\nconst starBaseSize = 0.05;\r\n\r\nconst asteroidBaseSize = 2;\r\nconst asteroidStrech = 0;\r\n\r\nfunction getRandomColor() {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '0x';\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}\r\n\r\n\r\n// Create the stars\r\nconst stars = [];\r\nfor (let i = 0; i < starAmount; i++) {\r\n    const star = {\r\n        sprite: new PIXI.Sprite(starTexture),\r\n        z: 0,\r\n        x: 0,\r\n        y: 0,\r\n\r\n    };\r\n\r\n    star.sprite.anchor.x = 0.5;\r\n    star.sprite.anchor.y = 0.7;\r\n    star.sprite.tint = getRandomColor();\r\n    randomizeStar(star, true);\r\n    app.stage.addChild(star.sprite);\r\n    stars.push(star);\r\n}\r\n\r\n\r\nconst explosions = []\r\n\r\n\r\nconst explosionParticleCount = 50;\r\n\r\n\r\n\r\n\r\n\r\nconst createExplosion = (astroid) => {\r\n    // hide asteroid\r\n\r\n\r\n    const z = astroid.z - cameraZ;\r\n    const x = astroid.x * (fov / z) * app.renderer.screen.width + app.renderer.screen.width / 2;\r\n    const y = astroid.y * (fov / z) * app.renderer.screen.width + app.renderer.screen.height / 2;\r\n\r\n    console.log(z,x,y)\r\n\r\n    const particle = {sprite: new PIXI.Sprite(starTexture), z: z, x: x, y: y, lifetime: 1000}\r\n    console.log(astroid)\r\n    console.log(particle)\r\n    app.stage.addChild(particle.sprite)\r\n\r\n    console.log(particle.sprite.x)\r\n\r\n    particle.sprite.tint = 0xffffff;\r\n\r\n    explosions.push(particle)\r\n\r\n \r\n\r\n    \r\n\r\n    /*astroid.sprite.renderable = false;\r\n\r\n    // push to explosions\r\n    const explosion = []\r\n    for(let i = 0; i < 1; i++){\r\n        // create explotion particle\r\n        const particle = {\r\n            ...astroid,\r\n            lifetime: 1000,\r\n            sprite: new PIXI.Sprite(starTexture)\r\n          \r\n        }\r\n        console.log(particle)\r\n        particle.sprite.anchor.x = 0.5;\r\n        particle.sprite.anchor.y = 0.7;\r\n        particle.sprite.tint = 0x00ff00;\r\n        particle.renderable = true;\r\n        app.stage.addChild(particle.sprite);\r\n        console.log(app.stage.children)\r\n        //randomizeParticle(particle)\r\n        explosion.push(particle);\r\n    }\r\n    explosions.push(explosion)\r\n\r\n    console.log(explosions)*/\r\n}\r\n\r\nconst randomizeParticle = (particle) => {\r\n    const deg = Math.random() * Math.PI * 2;\r\n    const distance = Math.random() * 50 + 1;\r\n    particle.x = Math.cos(deg) * distance;\r\n    particle.y = Math.sin(deg) * distance;\r\n    particle.lifetime = Math.random() * 500 + 500;\r\n}\r\n\r\n\r\napp.stage.interactive = true;\r\n// create asteroids\r\nconst astroids = [];\r\nfor (let i = 0; i < asteroidAmount; i++) {\r\n    const astroid = {\r\n        sprite: new PIXI.Sprite(starTexture),\r\n        z: 0,\r\n        x: 0,\r\n        y: 0,\r\n    };\r\n\r\n    astroid.sprite.anchor.x = 0.5;\r\n    astroid.sprite.anchor.y = 0.7;\r\n    astroid.sprite.tint = 0xff0000;\r\n    randomizeStar(astroid, true);\r\n    app.stage.addChild(astroid.sprite);\r\n    astroids.push(astroid);\r\n    console.log(astroid.sprite.height)\r\n\r\n    //astroid.sprite.hitArea = new PIXI.Rectangle(0,0,astroid.sprite.width, astroid.sprite.height)\r\n    astroid.sprite.interactive = true;\r\n    astroid.sprite.on(\"pointerover\", () => {\r\n        const body = document.querySelector(\"body\");\r\n        body.style.cursor = \"crosshair\";\r\n    })\r\n\r\n    astroid.sprite.on(\"pointerout\", () => {\r\n        const body = document.querySelector(\"body\");\r\n        body.style.cursor = \"auto\";\r\n    })\r\n\r\n    astroid.sprite.on(\"pointerdown\", () => {\r\n        // explode\r\n       \r\n\r\n        // create explosion\r\n        createExplosion(astroid)\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nfunction randomizeStar(star, initial) {\r\n    star.z = initial ? Math.random() * 2000 : cameraZ + Math.random() * 1000 + 2000;\r\n\r\n    // Calculate star positions with radial random coordinate so no star hits the camera.\r\n    const deg = Math.random() * Math.PI * 2;\r\n    const distance = Math.random() * 50 + 1;\r\n    star.x = Math.cos(deg) * distance;\r\n    star.y = Math.sin(deg) * distance;\r\n}\r\n\r\n// Change flight speed every 5 seconds\r\n\r\n\r\n// Listen for animate update\r\napp.ticker.add((delta) => {\r\n\r\n    // Simple easing. This should be changed to proper easing function when used for real.\r\n    speed += (warpSpeed - speed) / 20;\r\n    cameraZ += delta * 10 * (speed + baseSpeed);\r\n    for (let i = 0; i < starAmount; i++) {\r\n        \r\n\r\n        const star = stars[i];\r\n        if(i == 0){\r\n            console.log(star)\r\n        }\r\n        if (star.z < cameraZ) randomizeStar(star);\r\n\r\n        // Map star 3d position to 2d with really simple projection\r\n        const z = star.z - cameraZ;\r\n        star.sprite.x = star.x * (fov / z) * app.renderer.screen.width + app.renderer.screen.width / 2;\r\n        star.sprite.y = star.y * (fov / z) * app.renderer.screen.width + app.renderer.screen.height / 2;\r\n\r\n        // Calculate star scale & rotation.\r\n        const dxCenter = star.sprite.x - app.renderer.screen.width / 2;\r\n        const dyCenter = star.sprite.y - app.renderer.screen.height / 2;\r\n        const distanceCenter = Math.sqrt(dxCenter * dxCenter + dyCenter * dyCenter);\r\n        const distanceScale = Math.max(0, (2000 - z) / 2000);\r\n        star.sprite.scale.x = distanceScale * starBaseSize;\r\n        // Star is looking towards center so that y axis is towards center.\r\n        // Scale the star depending on how fast we are moving, what the stretchfactor is and depending on how far away it is from the center.\r\n        star.sprite.scale.y = distanceScale * starBaseSize + distanceScale * speed * starStretch * distanceCenter / app.renderer.screen.width;\r\n        star.sprite.rotation = Math.atan2(dyCenter, dxCenter) + Math.PI / 2;\r\n    }\r\n\r\n    // update asteroids\r\n    for (let i = 0; i < asteroidAmount; i++) {\r\n        const astroid = astroids[i];\r\n        if (astroid.z < cameraZ) {\r\n            randomizeStar(astroid);\r\n            astroid.sprite.renderable = true;\r\n        }\r\n\r\n        // Map star 3d position to 2d with really simple projection\r\n        const z = astroid.z - cameraZ;\r\n        astroid.sprite.x = astroid.x * (fov / z) * app.renderer.screen.width + app.renderer.screen.width / 2;\r\n        astroid.sprite.y = astroid.y * (fov / z) * app.renderer.screen.width + app.renderer.screen.height / 2;\r\n\r\n        // Calculate star scale & rotation.\r\n        const dxCenter = astroid.sprite.x - app.renderer.screen.width / 2;\r\n        const dyCenter = astroid.sprite.y - app.renderer.screen.height / 2;\r\n        const distanceCenter = Math.sqrt(dxCenter * dxCenter + dyCenter * dyCenter);\r\n        const distanceScale = Math.max(0, (2000 - z) / 2000);\r\n        astroid.sprite.scale.x = distanceScale * asteroidBaseSize;\r\n        // Star is looking towards center so that y axis is towards center.\r\n        // Scale the star depending on how fast we are moving, what the stretchfactor is and depending on how far away it is from the center.\r\n        astroid.sprite.scale.y = distanceScale * asteroidBaseSize + distanceScale * speed * asteroidStrech * distanceCenter / app.renderer.screen.width;\r\n        astroid.sprite.rotation = Math.atan2(dyCenter, dxCenter) + Math.PI / 2;\r\n    }\r\n\r\n    /*for (let i = 0; i < explosions.length; i++) {\r\n        const explosion = explosions[i];\r\n      \r\n        const z = explosion.z - cameraZ;\r\n        explosion.sprite.x = explosion.x * (fov / z) * app.renderer.screen.width + app.renderer.screen.width / 2;\r\n        explosion.sprite.y = explosion.y * (fov / z) * app.renderer.screen.width + app.renderer.screen.height / 2;\r\n\r\n        const dxCenter = explosion.sprite.x - app.renderer.screen.width / 2;\r\n        const dyCenter = explosion.sprite.y - app.renderer.screen.height / 2;\r\n        const distanceCenter = Math.sqrt(dxCenter * dxCenter + dyCenter * dyCenter);\r\n        const distanceScale = Math.max(0, (2000 - z) / 2000);\r\n        explosion.sprite.scale.x = distanceScale * asteroidBaseSize;\r\n        // Star is looking towards center so that y axis is towards center.\r\n        // Scale the star depending on how fast we are moving, what the stretchfactor is and depending on how far away it is from the center.\r\n        explosion.sprite.scale.y = distanceScale * asteroidBaseSize + distanceScale * speed * asteroidStrech * distanceCenter / app.renderer.screen.width;\r\n        explosion.sprite.rotation = Math.atan2(dyCenter, dxCenter) + Math.PI / 2;\r\n    }*/\r\n\r\n    // update explosions\r\n   /* for(let i = 0; i < explosions.length; i++){\r\n        const explosion = explosions[i]\r\n        for(let j = 0; j < explosion.length; j++){\r\n            const particle = explosion[j]\r\n\r\n            console.log(particle)\r\n\r\n            const z = explosion.z - cameraZ;\r\n            particle.sprite.x = particle.x * (fov / z) * app.renderer.screen.width + app.renderer.screen.width / 2;\r\n            particle.sprite.y = particle.y * (fov / z) * app.renderer.screen.width + app.renderer.screen.height / 2;\r\n\r\n            \r\n            // Calculate star scale & rotation.\r\n\r\n            particle.sprite.scale.set(20)\r\n\r\n     \r\n\r\n        }\r\n    }*/\r\n\r\n});\r\n\r\n}\r\n","import React, {useRef, useEffect} from 'react'\r\nimport {initStarBackground} from \"../pixijs/BackgroundAnimation\"\r\nimport \"../styles/components/SpaceBackground.styles.scss\"\r\n\r\nconst SpaceBackground = () => {\r\n    const canvasRef = useRef();\r\n\r\n    useEffect(() => {\r\n        initStarBackground(canvasRef.current)\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"space-background\">\r\n            <canvas className=\"space-background__canvas\" ref={canvasRef}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpaceBackground;","import React from 'react'\r\nimport SpaceBackground from './SpaceBackground.component'\r\nimport {smoothScrollTo} from \"../utils/utils\"\r\nimport {speedUp, slowDown} from \"../pixijs/BackgroundAnimation\"\r\nimport \"../styles/components/heroSection.styles.scss\";\r\n\r\n\r\nconst HeroSection = () => {\r\n\r\n    const onProjectsClick = () => smoothScrollTo(\"section-projects\")\r\n\r\n    const onMouseOut = () => {\r\n        console.log(\"mouse out\")\r\n        slowDown()\r\n    }\r\n\r\n    const onMouseOver = () => {\r\n        console.log(\"mouse over\")\r\n        speedUp()\r\n    }\r\n\r\n    return (\r\n        <div className=\"section section__hero\" id=\"section-hero\">\r\n            <SpaceBackground />\r\n            <div className=\"hero-section__overlay\"></div>\r\n            <div className=\"hero-section animation animation--fadeInTop\">\r\n                <h1 className=\"hero-section__title\">Elias Schmittel</h1>\r\n                <h2 className=\"hero-section__subtitle\">Web Developer</h2>\r\n                <p></p>\r\n                <button className=\"hero-section__button\" onClick={onProjectsClick} onMouseOut={onMouseOut} onMouseOver={onMouseOver}>\r\n                    View Projects\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroSection","import React from 'react'\r\nimport \"../styles/components/projectCard.styles.scss\";\r\nimport {FaGithub, FaGlobe} from \"react-icons/fa\"\r\n\r\n\r\n\r\nconst getTechColor = (name) => {\r\n    return \"red\";\r\n}\r\n\r\n\r\nconst ProjectCard = ({project}) => {\r\n\r\n    const tech = project.tech.split(\",\");\r\n\r\n    return (\r\n        <div className=\"project-card\">\r\n            <h3 className=\"project-card__title\">{project.title}</h3>\r\n            <div className=\"project-card__img-container\" style={{backgroundImage: `url('${project.image}')`}}>\r\n               \r\n            </div>\r\n            <div className=\"project-card__tech\">\r\n                {tech.map(techString => (\r\n                    <div className=\"project-card__tech-bubble\" >{techString}</div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"project-card__info\">\r\n\r\n                <p className=\"project-card__description\">{project.subtitle}</p>\r\n\r\n\r\n                <div className=\"project-card__actions\">\r\n\r\n                    {project.githubLink &&\r\n                    <a className=\"project-card__btn project-card__btn-github\" href={project.githubLink}>\r\n                        <FaGithub />\r\n                        View Code\r\n                    </a>\r\n                    }\r\n                    {project.webLink &&\r\n                    <a className=\"project-card__btn project-card__btn-website\" href={project.webLink}>\r\n                        <FaGlobe />\r\n                        View Demo\r\n                    </a>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectCard","import React from 'react'\r\nimport ProjectCard from './ProjectCard.component'\r\nimport \"../styles/components/projectsOverview.styles.scss\";\r\n\r\nconst ProjectsOverview = ({projects}) => {\r\n    return (\r\n        <div className=\"projects-overview\">\r\n            {projects.map(project => {\r\n                return <ProjectCard project={project} id={project.name}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectsOverview","import React from 'react'\r\nimport ProjectsOverview from './ProjectsOverview.component'\r\nimport projects from \"../data/projects.data.json\"\r\n\r\nconst ProjectsSection = () => (\r\n    <div className=\"section section__projects\" id=\"section-projects\">\r\n        <ProjectsOverview projects={projects} />\r\n    </div>\r\n)\r\n\r\nexport default ProjectsSection","import React, {useState} from 'react'\r\nimport \"../styles/components/contactSection.styles.scss\"\r\nimport {FaEnvelopeOpenText} from \"react-icons/fa\"\r\n\r\nconst ContactSection = () => {\r\n    const [errorMessage,setErrorMessage] = useState(null)\r\n    const [formData, setFormData] = useState({\r\n        email: \"\",\r\n        message: \"\"\r\n    })\r\n\r\n    const onChange = (e) => {\r\n        \r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        //send to google forms\r\n\r\n        setErrorMessage(null)\r\n\r\n        if(!formData.email){\r\n            setErrorMessage(\"Email can't be empty.\")\r\n            return;\r\n        }\r\n\r\n\r\n        if(!formData.message){\r\n            setErrorMessage(\"Message can't be empty.\")\r\n            return;\r\n        }\r\n\r\n        \r\n\r\n        const requestData = new FormData();\r\n        requestData.append(\"entry.1087599000\", formData.email)\r\n        requestData.append(\"entry.1951716230\", formData.message)\r\n\r\n        fetch(\"https://docs.google.com/forms/u/0/d/e/1FAIpQLSdfdPmE-DhITNAFpcB2d0TDtYfML7UmvzSriwEQt_ptHxOLew/formResponse\", {\r\n            headers: {\r\n                 'Content-Type': 'application/json',\r\n            },\r\n            method: \"POST\",\r\n            mode: \"no-cors\",\r\n            body: requestData\r\n        }).then((res) => {\r\n            console.log(res)\r\n            setErrorMessage(\"Message successfully sent.\")\r\n            setFormData({\r\n                email: \"\",\r\n                message: \"\"\r\n            })\r\n        }).catch(error => {\r\n            console.log(error)\r\n            setErrorMessage(\"Something went wrong. Reload the page and try again.\")\r\n        })\r\n    }\r\n\r\n    return (\r\n    <div className=\"section section__contact\" id=\"section-contact\">\r\n        <div className=\"contact-section-layout\">\r\n            <div className=\"contact-form\">\r\n\r\n                <div>\r\n                    <h3 className=\"contact-form__title\">Contact Me</h3>\r\n                    <div className=\"contact-form__my-email\"><FaEnvelopeOpenText /> ejfschmittel@gmail.com</div>\r\n                </div>\r\n                <form className=\"contact-form__form\" onSubmit={onSubmit}>\r\n                   \r\n                    <div className=\"contact-form__field\">\r\n                        <label className=\"contact-form__label\">Email</label>\r\n                        <input className=\"contact-form__email\" type=\"email\" value={formData.email} name=\"email\" onChange={onChange}/>\r\n                    </div>\r\n                    <div className=\"contact-form__field\">\r\n                        <label className=\"contact-form__label\">Message</label>\r\n                        <textarea className=\"contact-form__message\" name=\"message\" value={formData.message} name=\"message\" onChange={onChange}/>\r\n                    </div>\r\n                    <div className=\"contact-form__error\">\r\n                        {errorMessage}\r\n                    </div>\r\n                    <button className=\"contact-form__send-btn\">Send</button>           \r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)}\r\n\r\nexport default ContactSection","import React from 'react'\r\n\r\nimport {FaGithub, FaLinkedin} from \"react-icons/fa\"\r\nimport \"../styles/components/footer.styles.scss\";\r\n\r\nconst FooterSection = () => (\r\n    <footer className=\"section section__footer\">\r\n        <div className=\"footer\">\r\n            <div className=\"footer__copyright\">\r\n                Copyright © 2021 Elias Schmittel\r\n            </div>\r\n            <div className=\"footer__socials\">\r\n                <a href=\"https://github.com/ejfschmittel/\"><FaGithub /></a>\r\n                <a href=\"https://www.linkedin.com/in/elias-schmittel-0759b3109/\"><FaLinkedin /></a>\r\n            </div>\r\n        </div>\r\n    </footer>\r\n)\r\n\r\nexport default FooterSection","import Header from \"./components/Header.component\";\nimport HeroSection from \"./components/HeroSection.component\";\nimport ProjectsSection from \"./components/ProjectsSection.component\";\nimport ContactSection from \"./components/ContactSection.component\";\nimport FooterSection from \"./components/FooterSection.component\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        <HeroSection />\n        <ProjectsSection />\n        <ContactSection />\n        <FooterSection />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./styles/main.scss\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}